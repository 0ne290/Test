@using System.Text
@using System.Web
@using Core.Application.VendistaApi.Dto.Responses
@{
    ViewData["Title"] = "Home Page";
}

<form style="display: flex; flex-wrap: wrap; flex-direction: row;">
	<div style="flex-grow: 1">
		@foreach (var terminalId in (IEnumerable<int>)ViewData["TerminalIDs"]!)
		{
			<div><label class="custom-radio"><input type="radio" name="terminal" value="@terminalId" onchange="func1(this)"><span>@terminalId</span></label></div>
		}
	</div>
	
	<div style="flex-grow: 1; padding-bottom: 18.7%;">
		<select class="js-chosen" name="command" placeholder="Выберите команду" id="select" onchange="func()">
			<option value=""></option>
			@foreach (var command in (CommandResponseDto[])ViewData["Commands"]!)
			{
				<option value="@command.Id">@command.Name</option>
			}
		</select>
	</div>
	
	<div style="flex: 1 0 100%; order: 6" id="parameters"></div>
	
	<div style="flex: 1 0 100%; order: 7; margin-top: 2.4%; text-align: center"><button class="btn" style="width: 33%">Отправить</button></div>
	
</form>

<table class="sortable" style="margin: auto; padding-top: 4%">
	<thead>
	<tr>
		<th style="text-align: center">№</th>
		<th style="text-align: center">Дата и время</th>
		<th style="text-align: center">Команда</th>
		<th style="text-align: center">Параметр 1</th>
		<th style="text-align: center">Параметр 2</th>
		<th style="text-align: center">Параметр 3</th>
		<th style="text-align: center">Статус</th>
	</tr>
	</thead>
	<tbody id="tableBody"></tbody>
</table>

<script>
	class Parameter
	{
		constructor(name, defaultValue)
		{
			this._name = name;
			this._defaultValue = defaultValue;
		}
		
		get name()
		{
			return this._name;
		}
		
		get defaultValue()
		{
			return this._defaultValue;
		}
	}
	
	var stringParameters = new Map();
	var intParameters = new Map();
	@foreach (var command in (CommandResponseDto[])ViewData["Commands"]!)
	{
		if (command.DefaultIntValues.Count > 0)
		{
			var intParameterValue = new StringBuilder("[");
			foreach (var commandIntParameter in command.DefaultIntValues)
				intParameterValue.Append($"new Parameter(\"{HttpUtility.JavaScriptStringEncode(commandIntParameter.Key)}\", \"{HttpUtility.JavaScriptStringEncode(commandIntParameter.Value.ToString())}\"), ");
			intParameterValue.Remove(intParameterValue.Length - 2, 2);
			intParameterValue.Append("]");
			@:intParameters.set("@command.Id", @Html.Raw(intParameterValue.ToString().Replace("\n", "; ")));
		}

		if (command.DefaultStringValues.Count > 0)
		{
			var stringParameterValue = new StringBuilder("[");
			foreach (var commandstringParameter in command.DefaultStringValues)
				stringParameterValue.Append($"new Parameter(\"{HttpUtility.JavaScriptStringEncode(commandstringParameter.Key)}\", \"{HttpUtility.JavaScriptStringEncode(commandstringParameter.Value)}\"), ");
			stringParameterValue.Remove(stringParameterValue.Length - 2, 2);
			stringParameterValue.Append("]");
			@:stringParameters.set("@command.Id", @Html.Raw(stringParameterValue.ToString().Replace("\n", "; ")));
		}
	}
	
	$(document).ready(function()
	{
		$('.js-chosen').chosen({
			width: '100%',
			no_results_text: 'Совпадений не найдено',
			placeholder_text_single: 'Выберите команду'
		});
	});
	
	var select = document.getElementById("select");
	var parameters = document.getElementById('parameters');
	
	function func()
	{
		parameters.innerText = '';
        for (let i = 0; i < intParameters.get(select.options[select.selectedIndex].value).length; i++)
		{
			let intParameter = intParameters.get(select.options[select.selectedIndex].value)[i];
			parameters.insertAdjacentHTML("beforeend", `<div style="padding-bottom: 1.2%;"><p>${intParameter.name}</p><input type="text" name="parameter${i + 1}" value="${intParameter.defaultValue}" style="border: none;"></div>`);
		}
		
        for (let i = 0; i < stringParameters.get(select.options[select.selectedIndex].value).length; i++)
        {
        	let stringParameter = stringParameters.get(select.options[select.selectedIndex].value)[i];
        	parameters.insertAdjacentHTML("beforeend", `<div style="padding-bottom: 1.2%;"><p>${stringParameter.name}</p><input type="text" name="strParameter${i + 1}" value="${stringParameter.defaultValue}" style="border: none;"></div>`);
        }
	}
	
	async function func1(radio)
    {
		let tableBody = document.getElementById('tableBody');
		
		let response = await fetch(`http://localhost:5150/home/GetCommandsByTerminal?terminalId=${radio.value}`);
		let json = await response.json();
		
		tableBody.innerText = '';
		for (const command of json)
		{
			tableBody.insertAdjacentHTML("beforeend", `<tr><td style="text-align: center">${command.id}</td><td style="text-align: center">${command.time_created}</td><td style="text-align: center">${command.name}</td><td style="text-align: center">${command.parameter1}</td><td style="text-align: center">${command.parameter2}</td><td style="text-align: center">${command.parameter3}</td><td style="text-align: center">${command.status}</td></tr>`)
		}
    }
</script>